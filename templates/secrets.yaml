{{- if and .Values.secrets.create .Values.secrets.api.create (not .Values.secrets.existing.apiSecret) (or .Values.secrets.api.jwtSecretKey .Values.secrets.api.encryptionKey .Values.secrets.encryptionKeyGeneration .Values.secrets.api.openaiApiKey) }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "packmind.fullname" . }}-api-secrets
  labels:
    {{- include "packmind.labels" . | nindent 4 }}
    app.kubernetes.io/component: api
  {{- with (include "packmind.annotations" .) }}
  annotations:
    {{- if . }}
    {{- . | nindent 4 }}
    {{- end }}
  {{- end }}
type: Opaque
data:
  {{- if .Values.secrets.api.jwtSecretKey }}
  api-jwt-secret-key: {{ .Values.secrets.api.jwtSecretKey | b64enc | quote }}
  {{- end }}
  {{- $encryptionKey := include "packmind.encryptionKey" . }}
  {{- if $encryptionKey }}
  encryption-key: {{ $encryptionKey | b64enc | quote }}
  {{- end }}
  {{- if .Values.secrets.api.openaiApiKey }}
  openai-api-key: {{ .Values.secrets.api.openaiApiKey | b64enc | quote }}
  {{- end }}
{{- end }}

{{- if and .Values.secrets.create .Values.secrets.mcp.create (not .Values.secrets.existing.mcpSecret) .Values.secrets.mcp.jwtSecretKey }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "packmind.fullname" . }}-mcp-secrets
  labels:
    {{- include "packmind.labels" . | nindent 4 }}
    app.kubernetes.io/component: mcp-server
  {{- with (include "packmind.annotations" .) }}
  annotations:
    {{- if . }}
    {{- . | nindent 4 }}
    {{- end }}
  {{- end }}
type: Opaque
data:
  mcp-jwt-secret-key: {{ .Values.secrets.mcp.jwtSecretKey | b64enc | quote }}
{{- end }}

{{- if and .Values.secrets.create .Values.secrets.database.create (not .Values.postgresql.enabled) (not .Values.secrets.existing.databaseSecret) .Values.postgresql.external.existingSecret }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "packmind.fullname" . }}-database-secrets
  labels:
    {{- include "packmind.labels" . | nindent 4 }}
    app.kubernetes.io/component: database
  {{- with (include "packmind.annotations" .) }}
  annotations:
    {{- if . }}
    {{- . | nindent 4 }}
    {{- end }}
  {{- end }}
type: Opaque
data:
  # Database password should be provided via external secret or during installation
  # kubectl create secret generic {{ include "packmind.fullname" . }}-database-secrets --from-literal=password=<your-password>
{{- end }}

{{- if and .Values.secrets.create .Values.secrets.redis.create (not .Values.redis.enabled) (not .Values.secrets.existing.redisSecret) .Values.redis.external.existingSecret }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "packmind.fullname" . }}-redis-secrets
  labels:
    {{- include "packmind.labels" . | nindent 4 }}
    app.kubernetes.io/component: redis
  {{- with (include "packmind.annotations" .) }}
  annotations:
    {{- if . }}
    {{- . | nindent 4 }}
    {{- end }}
  {{- end }}
type: Opaque
data:
  # Redis password should be provided via external secret or during installation
  # kubectl create secret generic {{ include "packmind.fullname" . }}-redis-secrets --from-literal=password=<your-password>
{{- end }}
